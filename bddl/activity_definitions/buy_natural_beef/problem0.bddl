(define (problem buy_natural_beef-0)
    (:domain omnigibson)

    (:objects
        cash_register.n.01_1 - cash_register.n.01
        checkout.n.03_1 - checkout.n.03
        pack__of__ground_beef.n.01_1 pack__of__ground_beef.n.01_2 pack__of__ground_beef.n.01_3 - pack__of__ground_beef.n.01
        cooler.n.01_1 - cooler.n.01
        money.n.01_1 money.n.01_2 money.n.01_3 - money.n.01
        floor.n.01_1 - floor.n.01
        shelf.n.01_1 - shelf.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (ontop cash_register.n.01_1 checkout.n.03_1)
        (ontop pack__of__ground_beef.n.01_1 cooler.n.01_1)
        (ontop pack__of__ground_beef.n.01_2 cooler.n.01_1)
        (ontop pack__of__ground_beef.n.01_3 cooler.n.01_1)
        (ontop money.n.01_1 checkout.n.03_1) 
        (ontop money.n.01_2 checkout.n.03_1) 
        (ontop money.n.01_3 checkout.n.03_1) 
        (ontop cooler.n.01_1 floor.n.01_1) 
        (inroom floor.n.01_1 grocery_store) 
        (inroom shelf.n.01_1 grocery_store) 
        (inroom checkout.n.03_1 grocery_store) 
        (ontop agent.n.01_1 floor.n.01_1)
    
    )
    
    (:goal 
        (and
            (ontop ?pack__of__ground_beef.n.01_1 ?checkout.n.03_1)
            (ontop ?pack__of__ground_beef.n.01_2 ?checkout.n.03_1)
            (forall 
                (?money.n.01 - money.n.01) 
                (nextto ?money.n.01 ?cash_register.n.01_1)
    
            ) 
            (not 
                (ontop ?pack__of__ground_beef.n.01_3 ?checkout.n.03_1)
    
            )
    
        )
    
    )
)