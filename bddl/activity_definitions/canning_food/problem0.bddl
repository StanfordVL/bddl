(define (problem canning_food-0)
    (:domain omnigibson)

    (:objects
        steak.n.01_1 - steak.n.01 
        diced__steak.n.01_1 - diced__steak.n.01
        pineapple.n.02_1 - pineapple.n.02
        diced__pineapple.n.01_1 - diced__pineapple.n.01
        electric_refrigerator.n.01_1 - electric_refrigerator.n.01
        mason_jar.n.01_1 mason_jar.n.01_2 - mason_jar.n.01
        cabinet.n.01_1 - cabinet.n.01
        chopping_board.n.01_1 - chopping_board.n.01
        countertop.n.01_1 - countertop.n.01
        carving_knife.n.01_1 - carving_knife.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (inside steak.n.01_1 electric_refrigerator.n.01_1) 
        (inside pineapple.n.02_1 electric_refrigerator.n.01_1) 
        (inside mason_jar.n.01_1 cabinet.n.01_1) 
        (inside mason_jar.n.01_2 cabinet.n.01_1) 
        (ontop chopping_board.n.01_1 countertop.n.01_1) 
        (ontop carving_knife.n.01_1 chopping_board.n.01_1) 
        (inroom cabinet.n.01_1 kitchen) 
        (inroom electric_refrigerator.n.01_1 kitchen) 
        (inroom countertop.n.01_1 kitchen) 
        (inroom floor.n.01_1 kitchen) 
        (future diced__pineapple.n.01_1)
        (future diced__steak.n.01_1)
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (real ?diced__steak.n.01_1)
            (real ?diced__pineapple.n.01_1)
            (exists
                (?mason_jar.n.01 - mason_jar.n.01)
                (and 
                    (filled ?mason_jar.n.01 ?diced__steak.n.01_1)
                    (not
                        (contains ?mason_jar.n.01 ?diced__pineapple.n.01_1)
                    )
                )
            )
            (exists
                (?mason_jar.n.01 - mason_jar.n.01)
                (and 
                    (filled ?mason_jar.n.01 ?diced__pineapple.n.01_1)
                    (not
                        (contains ?mason_jar.n.01 ?diced__steak.n.01_1)
                    )
                )
            )
            (forall 
                (?mason_jar.n.01 - mason_jar.n.01) 
                (and
                    (inside ?mason_jar.n.01 ?cabinet.n.01_1)
                    (not
                        (open ?mason_jar.n.01)
                    )
                )
            ) 
        )
    )
)