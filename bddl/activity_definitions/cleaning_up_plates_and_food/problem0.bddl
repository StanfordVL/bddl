(define (problem cleaning_up_plates_and_food-0)
    (:domain omnigibson)

    (:objects
        plate.n.04_1 plate.n.04_2 - plate.n.04
        bowl.n.01_1 bowl.n.01_2 - bowl.n.01
        floor.n.01_1 - floor.n.01
        pizza.n.01_1 pizza.n.01_2 - pizza.n.01
        breakfast_table.n.01_1 - breakfast_table.n.01
        electric_refrigerator.n.01_1 electric_refrigerator.n.01_* - electric_refrigerator.n.01
        sink.n.01_1 sink.n.01_* - sink.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (ontop plate.n.04_1 breakfast_table.n.01_1) 
        (ontop plate.n.04_2 breakfast_table.n.01_1) 
        (ontop bowl.n.01_1 breakfast_table.n.01_1)
        (ontop bowl.n.01_2 breakfast_table.n.01_1)
        (ontop pizza.n.01_1 plate.n.04_1) 
        (ontop pizza.n.01_2 plate.n.04_2) 
        (ontop agent.n.01_1 floor.n.01_1) 
        (inroom breakfast_table.n.01_1 dining_room)
        (inroom floor.n.01_1 dining_room)
        (inroom electric_refrigerator.n.01_1 kitchen)
        (inroom electric_refrigerator.n.01_* kitchen)
        (inroom sink.n.01_1 kitchen)
        (inroom sink.n.01_* kitchen)
    )
    
    (:goal 
        (and 
            (forpairs 
                (?pizza.n.01 - pizza.n.01) 
                (?plate.n.04 - plate.n.04)
                (ontop ?pizza.n.01 ?plate.n.04)
            ) 
            (exists
                (?electric_refrigerator.n.01 - electric_refrigerator.n.01)
                (forall
                    (?pizza.n.01 - pizza.n.01)
                    (inside ?pizza.n.01 ?electric_refrigerator.n.01)
                )
            )
            (exists
                (?sink.n.01 - sink.n.01)
                (forall 
                    (?bowl.n.01 - bowl.n.01)
                    (inside ?bowl.n.01 ?sink.n.01)
                )
            )
            (forall
                (?electric_refrigerator.n.01 - electric_refrigerator.n.01)
                (not
                    (open ?electric_refrigerator.n.01)
                )
            )
        )
    )
)