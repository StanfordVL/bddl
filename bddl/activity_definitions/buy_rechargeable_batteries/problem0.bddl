(define (problem buy_rechargeable_batteries-0)
    (:domain omnigibson)

    (:objects
        cash_register.n.01_1 - cash_register.n.01
        checkout.n.03_1 - checkout.n.03
        battery.n.02_1 battery.n.02_2 - battery.n.02
        shelf.n.01_1 - shelf.n.01
        money.n.01_1 money.n.01_2 money.n.01_3 - money.n.01
        charger.n.02_1 - charger.n.02
        shopping_cart.n.01_1 - shopping_cart.n.01
        sack.n.01_1 - sack.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (ontop cash_register.n.01_1 checkout.n.03_1)
        (ontop battery.n.02_1 shelf.n.01_1)
        (ontop battery.n.02_2 shelf.n.01_1)
        (inside money.n.01_1 shopping_cart.n.01_1) 
        (inside money.n.01_2 shopping_cart.n.01_1) 
        (inside money.n.01_3 shopping_cart.n.01_1) 
        (ontop charger.n.02_1 shopping_cart.n.01_1) 
        (ontop sack.n.01_1 checkout.n.03_1) 
        (inroom floor.n.01_1 grocery_store) 
        (inroom shelf.n.01_1 grocery_store) 
        (inroom checkout.n.03_1 grocery_store) 
        (inroom shopping_cart.n.01_1 grocery_store) 
        (ontop agent.n.01_1 floor.n.01_1)
    
    )
    
    (:goal 
        (and 
            (forall 
                (?battery.n.02 - battery.n.02)
                (inside ?battery.n.02 ?sack.n.01_1)
            )
            (forall 
                (?money.n.01 - money.n.01) 
                (inside ?money.n.01 ?cash_register.n.01_1)
            ) 
            (inside ?sack.n.01_1 ?shopping_cart.n.01_1)
        )
    )
)