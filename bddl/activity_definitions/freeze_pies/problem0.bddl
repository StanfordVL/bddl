(define (problem freeze_pies-0)
    (:domain omnigibson)

    (:objects
        apple_pie.n.01_1 apple_pie.n.01_2 - apple_pie.n.01
        plate.n.04_1 plate.n.04_2 - plate.n.04
        countertop.n.01_1 - countertop.n.01
        tupperware.n.01_1 tupperware.n.01_2 - tupperware.n.01
        cabinet.n.01_1 - cabinet.n.01
        floor.n.01_1 - floor.n.01
        electric_refrigerator.n.01_1 - electric_refrigerator.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (ontop apple_pie.n.01_1 plate.n.04_1) 
        (ontop apple_pie.n.01_2 plate.n.04_2) 
        (ontop plate.n.04_1 countertop.n.01_1)
        (ontop plate.n.04_2 countertop.n.01_1)
        (inside tupperware.n.01_1 cabinet.n.01_1) 
        (inside tupperware.n.01_2 cabinet.n.01_1) 
        (not 
            (frozen apple_pie.n.01_1)
        ) 
        (not 
            (frozen apple_pie.n.01_2)
        )
        (inroom floor.n.01_1 kitchen) 
        (inroom cabinet.n.01_1 kitchen)
        (inroom countertop.n.01_1 kitchen)
        (inroom electric_refrigerator.n.01_1 kitchen) 
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (forpairs 
                (?apple_pie.n.01 - apple_pie.n.01) 
                (?tupperware.n.01 - tupperware.n.01) 
                (inside ?apple_pie.n.01 ?tupperware.n.01)
            ) 
            (forall 
                (?tupperware.n.01 - tupperware.n.01) 
                (inside ?tupperware.n.01 ?electric_refrigerator.n.01_1)
            ) 
            (forall 
                (?apple_pie.n.01 - apple_pie.n.01) 
                (frozen ?apple_pie.n.01)
            )
            (not
                (open ?electric_refrigerator.n.01_1)
            )
        )
    )
)