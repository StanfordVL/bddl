(define (problem can_beans-0)
    (:domain omnigibson)

    (:objects
        cabinet.n.01_1 - cabinet.n.01
        stockpot.n.01_1 - stockpot.n.01
        countertop.n.01_1 - countertop.n.01
        black_bean.n.01_1 - black_bean.n.01
        canister.n.02_1 canister.n.02_2 - canister.n.02
        shelf.n.01_1 - shelf.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (ontop stockpot.n.01_1 countertop.n.01_1) 
        (filled stockpot.n.01_1 black_bean.n.01_1) 
        (inside canister.n.02_1 cabinet.n.01_1)
        (inside canister.n.02_2 cabinet.n.01_1)
        (inroom shelf.n.01_1 kitchen) 
        (inroom cabinet.n.01_1 kitchen) 
        (inroom countertop.n.01_1 kitchen) 
        (inroom floor.n.01_1 kitchen) 
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (forall
                (?canister.n.02 - canister.n.02)
                (and
                    (filled ?canister.n.02 ?black_bean.n.01_1)
                    (inside ?canister.n.02 ?cabinet.n.01_1)
                )
            )
        )
    )
)
