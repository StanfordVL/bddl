(define (problem packing_meal_for_delivery-0)
    (:domain omnigibson)

    (:objects
        hamburger.n.01_1 hamburger.n.01_2 hamburger.n.01_3 hamburger.n.01_4 - hamburger.n.01
        countertop.n.01_1 - countertop.n.01
        backpack.n.01_1 - backpack.n.01
        sack.n.01_1 sack.n.01_2 sack.n.01_3 sack.n.01_4 - sack.n.01
        floor.n.01_1 - floor.n.01
        oven.n.01_1 - oven.n.01
        cabinet.n.01_1 - cabinet.n.01
        electric_refrigerator.n.01_1 - electric_refrigerator.n.01
        window.n.01_1 - window.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (cooked hamburger.n.01_1) 
        (cooked hamburger.n.01_2) 
        (cooked hamburger.n.01_3) 
        (cooked hamburger.n.01_4) 
        (ontop hamburger.n.01_1 countertop.n.01_1) 
        (ontop hamburger.n.01_2 countertop.n.01_1) 
        (ontop hamburger.n.01_3 countertop.n.01_1) 
        (ontop hamburger.n.01_4 countertop.n.01_1) 
        (ontop backpack.n.01_1 countertop.n.01_1) 
        (ontop sack.n.01_1 countertop.n.01_1)
        (ontop sack.n.01_2 countertop.n.01_1)
        (ontop sack.n.01_3 countertop.n.01_1)
        (ontop sack.n.01_4 countertop.n.01_1)
        (inroom floor.n.01_1 kitchen) 
        (inroom oven.n.01_1 kitchen) 
        (inroom cabinet.n.01_1 kitchen) 
        (inroom electric_refrigerator.n.01_1 kitchen) 
        (inroom window.n.01_1 kitchen) 
        (inroom countertop.n.01_1 kitchen) 
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (forpairs
                (?hamburger.n.01 - hamburger.n.01)
                (?sack.n.01 - sack.n.01)
                (inside ?hamburger.n.01 ?sack.n.01)
            )
            (forall 
                (?sack.n.01 - sack.n.01)
                (inside ?sack.n.01 ?backpack.n.01_1)
            )
        )
    )
)
