(define (problem cook_lamb-0)
    (:domain omnigibson)

    (:objects
        stockpot.n.01_1 - stockpot.n.01
        lamb.n.05_1 - lamb.n.05
        wax_paper.n.01_1 - wax_paper.n.01
        mint.n.04_1 mint.n.04_2 mint.n.04_3 mint.n.04_4 - mint.n.04
        bowl.n.01_1 bowl.n.01_2 - bowl.n.01
        clove.n.03_1 clove.n.03_2 - clove.n.03
        salt.n.02_1 - salt.n.02
        salt__shaker.n.01_1 - salt__shaker.n.01
        grill.n.02_1 - grill.n.02
        electric_refrigerator.n.01_1 - electric_refrigerator.n.01
        cabinet.n.01_1 - cabinet.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (inside stockpot.n.01_1 cabinet.n.01_1) 
        (ontop lamb.n.05_1 wax_paper.n.01_1)
        (not 
            (cooked lamb.n.05_1)
        ) 
        (frozen lamb.n.05_1)
        (inside wax_paper.n.01_1 electric_refrigerator.n.01_1)
        (inside mint.n.04_1 bowl.n.01_1) 
        (inside mint.n.04_2 bowl.n.01_1) 
        (inside mint.n.04_3 bowl.n.01_1) 
        (inside mint.n.04_4 bowl.n.01_1) 
        (inside clove.n.03_1 bowl.n.01_2)
        (inside clove.n.03_2 bowl.n.01_2)
        (inside bowl.n.01_1 electric_refrigerator.n.01_1)
        (inside bowl.n.01_2 electric_refrigerator.n.01_1)
        (insource salt__shaker.n.01_1 salt.n.02_1)
        (inside salt__shaker.n.01_1 cabinet.n.01_1)
        (inroom grill.n.02_1 kitchen) 
        (inroom electric_refrigerator.n.01_1 kitchen) 
        (inroom cabinet.n.01_1 kitchen) 
        (inroom floor.n.01_1 kitchen) 
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (cooked ?lamb.n.05_1)
            (covered ?lamb.n.05_1 ?salt.n.02_1)
            (forall 
                (?mint.n.04 - mint.n.04)
                (ontop ?mint.n.04 ?lamb.n.05_1)
            )
            (forall 
                (?clove.n.03 - clove.n.03)
                (and 
                    (cooked ?clove.n.03)
                    (touching ?clove.n.03 ?lamb.n.05_1)
                )
            )
        )
    )
)
