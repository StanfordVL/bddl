(define (problem set_up_a_bird_cage-0)
    (:domain omnigibson)

    (:objects
        birdcage.n.01_1 - birdcage.n.01
        breakfast_table.n.01_1 - breakfast_table.n.01
        bowl.n.01_1 bowl.n.01_2 - bowl.n.01
        toy_figure.n.01_1 toy_figure.n.01_2 - toy_figure.n.01
        water.n.06_1 - water.n.06
        sink.n.01_1 - sink.n.01
        apple.n.01_1 - apple.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (ontop birdcage.n.01_1 breakfast_table.n.01_1) 
        (ontop bowl.n.01_1 breakfast_table.n.01_1) 
        (ontop bowl.n.01_2 breakfast_table.n.01_1) 
        (ontop toy_figure.n.01_1 breakfast_table.n.01_1)
        (ontop toy_figure.n.01_2 breakfast_table.n.01_1)
        (ontop apple.n.01_1 breakfast_table.n.01_1) 
        (insource sink.n.01_1 water.n.06_1) 
        (inroom sink.n.01_1 kitchen) 
        (inroom breakfast_table.n.01_1 dining_room) 
        (inroom floor.n.01_1 dining_room) 
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (exists 
                (?bowl.n.01 - bowl.n.01)
                (and 
                    (inside ?apple.n.01_1 ?bowl.n.01)
                    (not 
                        (contains ?bowl.n.01 ?water.n.06_1)
                    )
                )
            )
            (exists 
                (?bowl.n.01 - bowl.n.01)
                (and 
                    (contains ?bowl.n.01 ?water.n.06_1)
                    (not 
                        (inside ?apple.n.01_1 ?bowl.n.01)
                    )
                )
            )
            (forall 
                (?toy_figure.n.01 - toy_figure.n.01)
                (inside ?toy_figure.n.01 ?birdcage.n.01_1)
            )
            (forall 
                (?bowl.n.01 - bowl.n.01)
                (inside ?bowl.n.01 ?birdcage.n.01_1)
            )
        )
    )
)