(define (problem store_baby_clothes-0)
    (:domain omnigibson)

    (:objects
        bath_towel.n.01_1 - bath_towel.n.01
        bed.n.01_1 - bed.n.01
        diaper.n.01_1 diaper.n.01_2 - diaper.n.01
        pajama.n.02_1 - pajama.n.02
        baby_shoe.n.01_1 baby_shoe.n.01_2 - baby_shoe.n.01
        sock.n.01_1 sock.n.01_2 - sock.n.01
        shelf.n.01_1 - shelf.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (ontop bath_towel.n.01_1 bed.n.01_1) 
        (ontop diaper.n.01_1 bed.n.01_1) 
        (ontop diaper.n.01_2 bed.n.01_1) 
        (ontop pajama.n.02_1 bed.n.01_1) 
        (ontop sock.n.01_1 bed.n.01_1) 
        (ontop sock.n.01_2 bed.n.01_1) 
        (ontop baby_shoe.n.01_1 floor.n.01_1)
        (ontop baby_shoe.n.01_2 floor.n.01_1)
        (inroom bed.n.01_1 childs_room) 
        (inroom shelf.n.01_1 childs_room) 
        (inroom floor.n.01_1 childs_room) 
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (inside ?bath_towel.n.01_1 ?shelf.n.01_1) 
            (folded ?bath_towel.n.01_1)
            (forall 
                (?diaper.n.01 - diaper.n.01)
                (inside ?diaper.n.01 ?shelf.n.01_1)
            )
            (inside ?pajama.n.02_1 ?shelf.n.01_1) 
            (folded ?pajama.n.02_1)
            (forall 
                (?sock.n.01 - sock.n.01)
                (and
                    (folded ?sock.n.01)
                    (inside ?sock.n.01 ?shelf.n.01_1)
                )
            )
            (nextto ?sock.n.01_1 ?sock.n.01_2)
            (forall 
                (?baby_shoe.n.01 - baby_shoe.n.01)
                (inside ?baby_shoe.n.01 ?shelf.n.01_1)
            )
            (touching ?baby_shoe.n.01_1 ?baby_shoe.n.01_2)
        )
    )
)