(define (problem unpacking_childs_bag-0)
    (:domain omnigibson)

    (:objects
        backpack.n.01_1 - backpack.n.01
        pen.n.01_1 pen.n.01_2 - pen.n.01
        pencil.n.01_1 pencil.n.01_2 - pencil.n.01
        book.n.02_1 book.n.02_2 - book.n.02
        notebook.n.01_1 - notebook.n.01
        crayon.n.01_1 crayon.n.01_2 - crayon.n.01
        desk.n.01_1 - desk.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
        bed.n.01_1 - bed.n.01
    )
    
    (:init
        (ontop backpack.n.01_1 bed.n.01_1) 
        (inside pen.n.01_1 backpack.n.01_1) 
        (inside pen.n.01_2 backpack.n.01_1) 
        (inside pencil.n.01_1 backpack.n.01_1) 
        (inside pencil.n.01_2 backpack.n.01_1) 
        (inside book.n.02_1 backpack.n.01_1) 
        (inside book.n.02_2 backpack.n.01_1) 
        (inside notebook.n.01_1 backpack.n.01_1) 
        (inside crayon.n.01_1 backpack.n.01_1) 
        (inside crayon.n.01_2 backpack.n.01_1)
        (inroom desk.n.01_1 childs_room)
        (inroom bed.n.01_1 childs_room)
        (inroom floor.n.01_1 childs_room)
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (forall 
                (?pen.n.01 - pen.n.01) 
                (ontop ?pen.n.01 ?desk.n.01_1)
            ) 
            (forall 
                (?pencil.n.01 - pencil.n.01) 
                (ontop ?pencil.n.01 ?desk.n.01_1)
            ) 
            (forall 
                (?book.n.02 - book.n.02) 
                (ontop ?book.n.02 ?desk.n.01_1)
            ) 
            (forall 
                (?crayon.n.01 - crayon.n.01) 
                (ontop ?crayon.n.01 ?desk.n.01_1)
            ) 
            (ontop ?notebook.n.01_1 ?desk.n.01_1)
            (nextto ?backpack.n.01_1 ?desk.n.01_1)
            (not
                (open ?backpack.n.01_1)
            )
        )
    )
)