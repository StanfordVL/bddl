(define (problem cook_spinach-0)
    (:domain omnigibson)

    (:objects
        saucepan.n.01_1 - saucepan.n.01
        stove.n.01_1 - stove.n.01
        tupperware.n.01_1 - tupperware.n.01
        spinach.n.02_1 spinach.n.02_2 - spinach.n.02
        black_pepper.n.02_1 - black_pepper.n.02
        pepper__shaker.n.01_1 - pepper__shaker.n.01
        electric_refrigerator.n.01_1 - electric_refrigerator.n.01
        cabinet.n.01_1 - cabinet.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (ontop saucepan.n.01_1 stove.n.01_1) 
        (inside spinach.n.02_1 tupperware.n.01_1) 
        (inside spinach.n.02_2 tupperware.n.01_1) 
        (not 
            (cooked spinach.n.02_1)
        )
        (not 
            (cooked spinach.n.02_2)
        )
        (inside tupperware.n.01_1 electric_refrigerator.n.01_1)
        (insource pepper__shaker.n.01_1 black_pepper.n.02_1)
        (inside pepper__shaker.n.01_1 cabinet.n.01_1)
        (inroom stove.n.01_1 kitchen) 
        (inroom electric_refrigerator.n.01_1 kitchen) 
        (inroom cabinet.n.01_1 kitchen) 
        (inroom floor.n.01_1 kitchen) 
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (forall 
                (?spinach.n.02 - spinach.n.02)
                (and 
                    (cooked ?spinach.n.02)
                    (covered ?spinach.n.02 ?black_pepper.n.02_1)
                )
            )
        )
    )
)
