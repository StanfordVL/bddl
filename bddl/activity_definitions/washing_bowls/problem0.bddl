(define (problem washing_bowls-0)
    (:domain omnigibson)

    (:objects
        bowl.n.01_1 bowl.n.01_2 - bowl.n.01
        sink.n.01_1 - sink.n.01
        sponge.n.01_1 - sponge.n.01
        milk.n.01_1 - milk.n.01
        broth.n.01_1 - broth.n.01
        stain.n.01_1 - stain.n.01
        water.n.06_1 - water.n.06
        liquid_soap.n.01_1 - liquid_soap.n.01
        liquid_soap__bottle.n.01_1 - liquid_soap__bottle.n.01
        floor.n.01_1 - floor.n.01
        countertop.n.01_1 - countertop.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (ontop bowl.n.01_1 sink.n.01_1)
        (ontop bowl.n.01_2 sink.n.01_1)
        (ontop sponge.n.01_1 sink.n.01_1)
        (covered bowl.n.01_1 stain.n.01_1) 
        (covered bowl.n.01_1 milk.n.01_1)
        (covered bowl.n.01_2 stain.n.01_1) 
        (covered bowl.n.01_2 broth.n.01_1)
        (filled liquid_soap__bottle.n.01_1 liquid_soap.n.01_1)
        (ontop liquid_soap__bottle.n.01_1 countertop.n.01_1)
        (insource sink.n.01_1 water.n.06_1)
        (inroom floor.n.01_1 kitchen) 
        (inroom countertop.n.01_1 kitchen) 
        (inroom sink.n.01_1 kitchen) 
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (forall 
                (?bowl.n.01 - bowl.n.01)
                (and
                    (not 
                        (covered ?bowl.n.01 ?stain.n.01_1)
                    )
                    (not 
                        (covered ?bowl.n.01 ?broth.n.01_1)
                    )
                    (not 
                        (covered ?bowl.n.01 ?milk.n.01_1)
                    )
                )
            )
        )
    )
)