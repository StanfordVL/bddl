(define (problem cook_noodles-0)
    (:domain omnigibson)

    (:objects
        chopping_board.n.01_1 - chopping_board.n.01
        stockpot.n.01_1 - stockpot.n.01
        shelf.n.01_1 - shelf.n.01
        lid.n.02_1 - lid.n.02
        sink.n.01_1 - sink.n.01
        noodle.n.01_1 - noodle.n.01
        cooked__noodle.n.01_1 - cooked__noodle.n.01
        tupperware.n.01_1 - tupperware.n.01
        water.n.06_1 - water.n.06
        stove.n.01_1 - stove.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (inside stockpot.n.01_1 shelf.n.01_1) 
        (inside lid.n.02_1 shelf.n.01_1) 
        (filled tupperware.n.01_1 noodle.n.01_1) 
        (inside tupperware.n.01_1 shelf.n.01_1)
        (inside chopping_board.n.01_1 shelf.n.01_1) 
        (future cooked__noodle.n.01_1)
        (insource sink.n.01_1 water.n.06_1) 
        (inroom shelf.n.01_1 kitchen) 
        (inroom sink.n.01_1 kitchen) 
        (inroom stove.n.01_1 kitchen) 
        (inroom floor.n.01_1 kitchen) 
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (real ?cooked__noodle.n.01_1)
        )
    )
)