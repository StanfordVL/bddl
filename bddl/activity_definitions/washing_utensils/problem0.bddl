(define (problem washing_utensils-0)
    (:domain omnigibson)

    (:objects
        teaspoon.n.02_1 teaspoon.n.02_2 teaspoon.n.02_3 - teaspoon.n.02
        floor.n.01_1 - floor.n.01
        soy_sauce.n.01_1 - soy_sauce.n.01
     cooking_oil.n.01_1 - cooking_oil.n.01
        spatula.n.01_1 - spatula.n.01
        liquid_soap.n.01_1 - liquid_soap.n.01
        liquid_soap__bottle.n.01_1 - liquid_soap__bottle.n.01
        sponge.n.01_1 - sponge.n.01
        water.n.06_1 - water.n.06
        dishwasher.n.01_1 - dishwasher.n.01
        countertop.n.01_1 - countertop.n.01
        sink.n.01_1 - sink.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (ontop teaspoon.n.02_1 sink.n.01_1)
        (ontop teaspoon.n.02_2 sink.n.01_1)
        (ontop teaspoon.n.02_3 sink.n.01_1)
        (covered teaspoon.n.02_1 soy_sauce.n.01_1)
        (covered teaspoon.n.02_1 soy_sauce.n.01_1)
        (covered teaspoon.n.02_1 cooking_oil.n.01_1)
        (covered teaspoon.n.02_1 soy_sauce.n.01_1)
        (covered teaspoon.n.02_1 cooking_oil.n.01_1)
        (ontop spatula.n.01_1 sink.n.01_1)
        (covered spatula.n.01_1 cooking_oil.n.01_1)   
        (ontop sponge.n.01_1 countertop.n.01_1)
        (filled liquid_soap__bottle.n.01_1 liquid_soap.n.01_1)
        (ontop liquid_soap__bottle.n.01_1 countertop.n.01_1)
        (insource sink.n.01_1 water.n.06_1)
        (inroom floor.n.01_1 kitchen) 
        (inroom countertop.n.01_1 kitchen) 
        (inroom dishwasher.n.01_1 kitchen) 
        (inroom sink.n.01_1 kitchen) 
        (ontop agent.n.01_1 floor.n.01_1) 
    )
    
    (:goal 
        (and 
            (forall 
                (?teaspoon.n.02 - teaspoon.n.02)
                (and
                    (not 
                        (covered ?teaspoon.n.02 ?soy_sauce.n.01_1)
                    )
                    (not 
                        (covered ?teaspoon.n.02 ?cooking_oil.n.01_1)
                    )
                )
            )
            (not 
                (covered ?spatula.n.01_1 ?cooking_oil.n.01_1)
            )
        )
    )
)