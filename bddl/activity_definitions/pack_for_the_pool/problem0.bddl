(define (problem pack_for_the_pool-0)
    (:domain omnigibson)

    (:objects
        money.n.01_1 - money.n.01
        coffee_table.n.01_1 - coffee_table.n.01
        lip_balm.n.01_1 - lip_balm.n.01
        bath_towel.n.01_1 bath_towel.n.01_2 - bath_towel.n.01
        sofa.n.01_1 - sofa.n.01
        cooler.n.01_1 - cooler.n.01
        swimsuit.n.01_1 - swimsuit.n.01
        life_jacket.n.01_1 - life_jacket.n.01
        carryall.n.01_1 - carryall.n.01
        cabinet.n.01_1 - cabinet.n.01
        water_bottle.n.01_1 water_bottle.n.01_2 - water_bottle.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (ontop money.n.01_1 coffee_table.n.01_1) 
        (ontop lip_balm.n.01_1 coffee_table.n.01_1) 
        (ontop bath_towel.n.01_1 sofa.n.01_1) 
        (ontop bath_towel.n.01_2 sofa.n.01_1) 
        (ontop cooler.n.01_1 sofa.n.01_1) 
        (ontop swimsuit.n.01_1 sofa.n.01_1) 
        (ontop life_jacket.n.01_1 coffee_table.n.01_1) 
        (ontop carryall.n.01_1 coffee_table.n.01_1)
        (inside water_bottle.n.01_1 cabinet.n.01_1)
        (inside water_bottle.n.01_2 cabinet.n.01_1)
        (inroom floor.n.01_1 living_room) 
        (inroom coffee_table.n.01_1 living_room) 
        (inroom sofa.n.01_1 living_room) 
        (inroom cabinet.n.01_1 kitchen)
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (inside ?money.n.01_1 ?carryall.n.01_1)
            (inside ?lip_balm.n.01_1 ?carryall.n.01_1)
            (forall 
                (?bath_towel.n.01 - bath_towel.n.01)
                (and 
                    (folded ?bath_towel.n.01)
                    (inside ?bath_towel.n.01 ?carryall.n.01_1)
                )
            )
            (inside ?life_jacket.n.01_1 ?carryall.n.01_1)
            (folded ?swimsuit.n.01_1)
            (inside ?swimsuit.n.01_1 ?carryall.n.01_1)
            (forall 
                (?water_bottle.n.01 - water_bottle.n.01)
                (inside ?water_bottle.n.01 ?cooler.n.01_1)
            )
        )
    )
)