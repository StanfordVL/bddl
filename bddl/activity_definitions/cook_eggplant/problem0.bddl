(define (problem cook_eggplant-0)
    (:domain omnigibson)

    (:objects
        cookie_sheet.n.01_1 - cookie_sheet.n.01
        oven.n.01_1 - oven.n.01
        eggplant.n.01_1 - eggplant.n.01
        half__eggplant.n.01_1 half__eggplant.n.01_2 - half__eggplant.n.01
        parer.n.02_1 - parer.n.02
        chopping_board.n.01_1 - chopping_board.n.01
        feta.n.01_1 - feta.n.01
        feta__box.n.01_1 - feta__box.n.01
        countertop.n.01_1 - countertop.n.01
        electric_refrigerator.n.01_1 - electric_refrigerator.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (ontop cookie_sheet.n.01_1 countertop.n.01_1) 
        (ontop chopping_board.n.01_1 countertop.n.01_1) 
        (ontop parer.n.02_1 chopping_board.n.01_1)
        (inside eggplant.n.01_1 electric_refrigerator.n.01_1) 
        (inside feta.n.01_1 feta__box.n.01_1)
        (inside feta__box.n.01_1 electric_refrigerator.n.01_1)
        (not 
            (cooked eggplant.n.01_1)
        ) 
        (inroom oven.n.01_1 kitchen)
        (inroom countertop.n.01_1 kitchen) 
        (inroom electric_refrigerator.n.01_1 kitchen) 
        (inroom floor.n.01_1 kitchen) 
        (future half__eggplant.n.01_1)
        (future half__eggplant.n.01_2)
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (real ?half__eggplant.n.01_1)
            (real ?half__eggplant.n.01_2)
            (forall 
                (?half__eggplant.n.01 - half__eggplant.n.01)
                (and 
                    (cooked ?half__eggplant.n.01)
                    (ontop ?feta.n.01_1 ?half__eggplant.n.01)
                )
            )
        )
    )
)
