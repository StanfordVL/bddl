(define (problem storing_food-0)
    (:domain omnigibson)

    (:objects
     	box__of__oatmeal.n.01_1 box__of__oatmeal.n.01_2 - box__of__oatmeal.n.01
    	countertop.n.01_1 - countertop.n.01
    	bag__of__chips.n.01_1 bag__of__chips.n.01_2 - bag__of__chips.n.01
    	bottle__of__olive_oil.n.01_1 bottle__of__olive_oil.n.01_2 - bottle__of__olive_oil.n.01
    	jar__of__sugar.n.01_1 jar__of__sugar.n.01_2 - jar__of__sugar.n.01
    	cabinet.n.01_1 cabinet.n.01_* - cabinet.n.01
    	floor.n.01_1 - floor.n.01
    	agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (ontop box__of__oatmeal.n.01_1 countertop.n.01_1) 
        (ontop box__of__oatmeal.n.01_2 countertop.n.01_1) 
        (ontop bag__of__chips.n.01_1 countertop.n.01_1) 
        (ontop bag__of__chips.n.01_2 countertop.n.01_1) 
        (ontop bottle__of__olive_oil.n.01_1 countertop.n.01_1) 
        (ontop bottle__of__olive_oil.n.01_2 countertop.n.01_1) 
        (ontop jar__of__sugar.n.01_1 countertop.n.01_1) 
        (ontop jar__of__sugar.n.01_2 countertop.n.01_1) 
        (inroom countertop.n.01_1 kitchen) 
        (inroom cabinet.n.01_1 kitchen) 
        (inroom cabinet.n.01_* kitchen)
        (inroom floor.n.01_1 kitchen) 
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (forall
                (?box__of__oatmeal.n.01 - box__of__oatmeal.n.01)
                (exists 
                    (?cabinet.n.01 - cabinet.n.01) 
                    (inside ?box__of__oatmeal.n.01 ?cabinet.n.01)
                )
            )
            (forall
                (?bag__of__chips.n.01 - bag__of__chips.n.01)
                (exists 
                    (?cabinet.n.01 - cabinet.n.01) 
                    (inside ?bag__of__chips.n.01 ?cabinet.n.01)
                )
            )
            (forall
                (?bottle__of__olive_oil.n.01 - bottle__of__olive_oil.n.01)
                (exists 
                    (?cabinet.n.01 - cabinet.n.01) 
                    (inside ?bottle__of__olive_oil.n.01 ?cabinet.n.01)
                )
            )
            (forall
                (?jar__of__sugar.n.01 - jar__of__sugar.n.01)
                (exists 
                    (?cabinet.n.01 - cabinet.n.01) 
                    (inside ?jar__of__sugar.n.01 ?cabinet.n.01)
                )
            )
        )
    )
)